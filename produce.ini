[]
prelude =
    import re
    import os
    from datetime import datetime

    current_day = datetime.now().day
    current_month = datetime.now().month
    current_year = datetime.now().year


    def is_year(str):
        try:
            year = float(str)
            return 2015 <= year <= current_year
            return True
        except ValueError:
            return False
    
    def is_day(str):
        try:
            day = float(str)
            if current_month == 12:
                return 1 <= day <= min(25, current_day)
            else:
                return 1 <= day <= 25
        except ValueError:
            return False  

    def cleanDay(day):
        return re.sub(r"^0", "", day)

    def toPart(daynum, part):
        cleaned_daynum = cleanDay(daynum)
        if part == "1":
            return f"{cleaned_daynum}"
        elif part == "2":
            return f"{cleaned_daynum}.2"
        else:
            raise ValueError("part must be 1 or 2")

[aoc/year%{year}/day%{daynum}/input.txt]
cond = %{is_year(year) and is_day(daynum)}
recipe = 
    mkdir -p aoc/year%{year}/day%{daynum}
    ./aocdl -year %{year} -day %{daynum} -output aoc/year%{year}/day%{daynum}/input.txt -force

[aoc/year%{year}/day%{daynum}/part%{pyNum}.test]
type = task
cond = %{is_year(year) and is_day(daynum) and pyNum in ["1","2"]}
puzzlePath = aoc/year%{year}/day%{daynum}
input = %{puzzlePath}/test.txt
pythonPart = %{toPart(daynum, pyNum)}
recipe = 
    python puzzleCaller.py --path %{puzzlePath}/day%{pythonPart}.py --input %{input}

[aoc/year%{year}/day%{daynum}/part%{pyNum}.time]
type = task
cond = %{is_year(year) and is_day(daynum) and pyNum in ["1","2"]}
puzzlePath = aoc/year%{year}/day%{daynum}
dep.input = %{puzzlePath}/input.txt
pythonPart = %{toPart(daynum, pyNum)}
recipe = 
    time (python puzzleCaller.py --path %{puzzlePath}/day%{pythonPart}.py --input %{input})


[aoc/year%{year}/day%{daynum}/part%{pyNum}.debug]
type = task
cond = %{is_year(year) and is_day(daynum) and pyNum in ["1","2"]}
puzzlePath = aoc/year%{year}/day%{daynum}
dep.input = %{puzzlePath}/input.txt
pythonPart = %{toPart(daynum, pyNum)}
recipe = 
    (python puzzleCaller.py --path %{puzzlePath}/day%{pythonPart}.py --input %{input}) > %{puzzlePath}/debug.txt

[aoc/year%{year}/day%{daynum}/part%{pyNum}]
type = task
cond = %{is_year(year) and is_day(daynum) and pyNum in ["1","2"]}
puzzlePath = aoc/year%{year}/day%{daynum}
dep.input = %{puzzlePath}/input.txt
pythonPart = %{toPart(daynum, pyNum)}
recipe = 
    echo "website: https://adventofcode.com/%{year}/day/%{cleanDay(daynum)}"
    echo "path: %{puzzlePath}/day%{pythonPart}.py"
    python puzzleCaller.py --path %{puzzlePath}/day%{pythonPart}.py --input %{input}
    
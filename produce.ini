[]
prelude =
    import re

    def is_float(str):
        try:
            float(str)
            return True
        except ValueError:
            return False

    def to_py(inp_int):
        num = int(inp_int[0])
        if num == 1:
            return ".py"
        elif num == 2:
            return ".2.py"
        else:
            raise NotImplementedError

    def argument_check(inp_int):
        print(inp_int)
        if not is_float(inp_int[0]):
            return False

        num = int(inp_int[0])
        if num == 1:
            return True
        elif num == 2:
            return True
        else:
            return False

    # def get_input_file(str_input):
        

    def prefix_argument_parse(str_input):
        final_str = ""
        if "t" in str_input.lower():
            final_str += "time ("
        return final_str
    

    def postfix_argument_parse(str_input):
        final_str = ""
        if "t" in str_input.lower():
            final_str += ")"
        
        if "o" in str_input.lower():
            final_str += "> debug/out.txt"
        
        return final_str


[%{year}/day%{daynum}/input.txt]
cond = %{is_float(year) and is_float(daynum)}
recipe = 
    mkdir -p %{year}/day%{daynum}
    ./aocdl -year %{year} -day %{daynum} -output %{year}/day%{daynum}/input.txt


[%{year}/day%{daynum}/%{args}]
type = task
cond = %{is_float(year) and is_float(daynum) and argument_check(args)}
bash_prefix = %{prefix_argument_parse(args)}
bash_postfix = %{postfix_argument_parse(args)}
pyfile = "day"%{daynum}%{to_py(args)}
shell = python
recipe = 
    echo "%{pyfile}"
    mkdir -p %{year}/day%{daynum}/
    echo "%{bash_prefix} python %{year}/day%{daynum}/%{pyfile} %{bash_postfix}"


[test]
type = task
shell = python
recipe = 
    print("hello world")
    for i in range(5):
        print(i)